provider "aws" {
    access_key = "${var.aws_access_key}"
    secret_key = "${var.aws_secret_key}"
    region = "${var.aws_region}"
}
resource "aws_vpc" "default" {
    cidr_block = "10.0.0.0/24"
    enable_dns_hostnames = true
    tags ={
        Name = "terraform-aws-vpc"
    }
}

resource "aws_subnet" "us-west-2a-public" {
    vpc_id = "${aws_vpc.default.id}"

    cidr_block = "10.0.0.0/26"
    availability_zone = "us-west-2a"

    tags ={
        Name = "Public Subnet"
    }
}
resource "aws_subnet" "us-west-2a-public1" {
    vpc_id = "${aws_vpc.default.id}"

    cidr_block = "10.0.0.64/26"
    availability_zone = "us-west-2a"

    tags ={
        Name = "Public Subnet1"
    }
}



resource "aws_subnet" "us-west-2a-private" {
    vpc_id = "${aws_vpc.default.id}"

    cidr_block = "10.0.0.128/26"
    availability_zone = "us-west-2a"

    tags ={
        Name = "Private Subnet"
    }
}
resource "aws_subnet" "us-west-2a-private1" {
    vpc_id = "${aws_vpc.default.id}"

    cidr_block = "10.0.0.192/26"
    availability_zone = "us-west-2a"

    tags ={
        Name = "Private Subnet1"
    }
}
resource "aws_s3_bucket" "b" {
  bucket = "my-arch4-test-bucket"
  acl    = "private"

  tags = {
    Name        = "My bucket"
    }
}


resource "aws_security_group" "securitygroup1" {
    name = "sg1"
    description = "Allow traffic to pass from the private subnet1 to the private subnet2"

    ingress {
        from_port = 80
        to_port = 80
        protocol = "tcp"
        cidr_blocks = ["10.0.0.128/26"]
    }
    ingress {
        from_port = 443
        to_port = 443
        protocol = "tcp"
        cidr_blocks = ["10.0.0.128/26"]
        }
    ingress {
        from_port = 22
        to_port = 22
        protocol = "tcp"
        cidr_blocks = ["10.0.0.128/26"]
    }
        egress {
        from_port = -1
        to_port = -1
        protocol = "icmp"
        cidr_blocks = ["0.0.0.0/0"]
    }

    vpc_id = "${aws_vpc.default.id}"

    tags ={
        Name = "SG1"
    }
}

resource "aws_security_group" "securitygroup2" {
    name = "sg2"
    description = "Allow traffic to pass from the private subnet2 to the private subnet1"

    ingress {
        from_port = 80
        to_port = 80
        protocol = "tcp"
        cidr_blocks = ["10.0.0.192/26"]
    }
    ingress {
        from_port = 443
        to_port = 443
        protocol = "tcp"
        cidr_blocks = ["10.0.0.192/26"]
        }
    ingress {
        from_port = 22
        to_port = 22
        protocol = "tcp"
        cidr_blocks = ["10.0.0.192/26"]
    }
        egress {
        from_port = -1
        to_port = -1
        protocol = "icmp"
        cidr_blocks = ["0.0.0.0/0"]
    }

    vpc_id = "${aws_vpc.default.id}"

    tags ={
        Name = "SG2"
    }
}
resource "aws_security_group_rule" "example1" {
  type              = "ingress"
  from_port         = 22
  to_port           = 22
  protocol          = "tcp"
  source_security_group_id ="${aws_security_group.securitygroup2.id}"
  security_group_id = "${aws_security_group.securitygroup1.id}"
}
resource "aws_security_group_rule" "example2" {
  type              = "ingress"
  from_port         = 22
  to_port           = 22
  protocol          = "tcp"
  source_security_group_id ="${aws_security_group.securitygroup1.id}"
  security_group_id = "${aws_security_group.securitygroup2.id}"
}
resource "aws_vpc_endpoint" "s3" {
  vpc_id       = "${aws_vpc.default.id}"
  service_name = "com.amazonaws.us-west-2.s3"
  route_table_ids=["${aws_vpc.default.default_route_table_id}"]
}


resource "aws_route_table_association" "us-west-2a-private" {
    subnet_id = "${aws_subnet.us-west-2a-private.id}"
    route_table_id = "${aws_vpc.default.default_route_table_id}"
}

